// <auto-generated />
using System;
using CasusBlok4.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CasusBlok4.Migrations.Data
{
    [DbContext(typeof(DataContext))]
    [Migration("20210607123435_AddedCategoriesAndEmployees")]
    partial class AddedCategoriesAndEmployees
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.6");

            modelBuilder.Entity("CasusBlok4.Models.Entity.Categorie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("CasusBlok4.Models.Entity.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(24)
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("TEXT");

                    b.Property<short>("Saldo")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("CasusBlok4.Models.Entity.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(24)
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("CasusBlok4.Models.Entity.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(24)
                        .HasColumnType("TEXT");

                    b.Property<int?>("CategorieId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("TEXT");

                    b.Property<short?>("PointsWorth")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SubCategorieId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CategorieId");

                    b.HasIndex("SubCategorieId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("CasusBlok4.Models.Entity.SubCategorie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("HeadCategorie")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("HeadCategorie");

                    b.ToTable("SubCategories");
                });

            modelBuilder.Entity("CasusBlok4.Models.Entity.Transaction", b =>
                {
                    b.Property<string>("TransactionId")
                        .HasColumnType("TEXT");

                    b.Property<int>("CustomerId")
                        .HasMaxLength(24)
                        .HasColumnType("INTEGER");

                    b.Property<int>("EmployeeId")
                        .HasMaxLength(24)
                        .HasColumnType("INTEGER");

                    b.Property<long?>("EndTime")
                        .HasColumnType("INTEGER");

                    b.Property<long>("StartTime")
                        .HasColumnType("INTEGER");

                    b.HasKey("TransactionId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("CasusBlok4.Models.Entity.TransactionProduct", b =>
                {
                    b.Property<string>("TransactionId")
                        .HasColumnType("TEXT");

                    b.Property<byte>("IsForSell")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("NumberOfProduct")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Points")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("TEXT");

                    b.HasKey("TransactionId");

                    b.HasIndex("ProductId");

                    b.ToTable("TransactionProducts");
                });

            modelBuilder.Entity("CasusBlok4.Models.Entity.Product", b =>
                {
                    b.HasOne("CasusBlok4.Models.Entity.Categorie", "Categorie")
                        .WithMany("Products")
                        .HasForeignKey("CategorieId");

                    b.HasOne("CasusBlok4.Models.Entity.SubCategorie", "SubCategorie")
                        .WithMany("Products")
                        .HasForeignKey("SubCategorieId");

                    b.Navigation("Categorie");

                    b.Navigation("SubCategorie");
                });

            modelBuilder.Entity("CasusBlok4.Models.Entity.SubCategorie", b =>
                {
                    b.HasOne("CasusBlok4.Models.Entity.Categorie", "Categorie")
                        .WithMany("SubCategories")
                        .HasForeignKey("HeadCategorie")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categorie");
                });

            modelBuilder.Entity("CasusBlok4.Models.Entity.Transaction", b =>
                {
                    b.HasOne("CasusBlok4.Models.Entity.Customer", "Customer")
                        .WithMany("Transactions")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CasusBlok4.Models.Entity.Employee", "Employee")
                        .WithMany("Transactions")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("CasusBlok4.Models.Entity.TransactionProduct", b =>
                {
                    b.HasOne("CasusBlok4.Models.Entity.Product", "Product")
                        .WithMany("TransactionProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CasusBlok4.Models.Entity.Transaction", "Transaction")
                        .WithMany("TransactionProducts")
                        .HasForeignKey("TransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("CasusBlok4.Models.Entity.Categorie", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("CasusBlok4.Models.Entity.Customer", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("CasusBlok4.Models.Entity.Employee", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("CasusBlok4.Models.Entity.Product", b =>
                {
                    b.Navigation("TransactionProducts");
                });

            modelBuilder.Entity("CasusBlok4.Models.Entity.SubCategorie", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("CasusBlok4.Models.Entity.Transaction", b =>
                {
                    b.Navigation("TransactionProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
